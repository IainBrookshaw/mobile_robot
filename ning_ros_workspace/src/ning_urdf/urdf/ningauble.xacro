<?xml version="1.0"?>
<!--
    Ningauble of The Seven Eyes
    Iain Brookshaw
    Copyright (c), 2020. All Rights Reserved
    MIT License

    This should work with both Gazebo and RViz
    see https://github.com/ros/urdf_sim_tutorial/blob/master/urdf/13-diffdrive.urdf.xacro
    for a base example
-->
<robot name="ningauble" xmlns:xacro="http://ros.org/wiki/xacro">

    <!--
        Define Robot Constants

        These are for geometry only. Physics constants for the simulator 
        are in ningauble.gazebo
    -->

    <!-- Chassis Constants -->
    <xacro:property name="chassis_height"   value="0.05"     />
    <xacro:property name="chassis_diameter" value="0.2"      />
    <xacro:property name="chassis_center"   value="0 0 ${chassis_height / 2.0}" />
    <xacro:property name="chassis_mass"     value="1.0"      />

    <!-- Drive Wheels Constants -->
    <xacro:property name="wheel_base"      value="${chassis_diameter}"/>
    <xacro:property name="wheel_diameter"  value="0.05"  />
    <xacro:property name="wheel_thickness" value="0.005" />
    <xacro:property name="wheel_mass"      value="0.001" />
    <xacro:property name="wheel_axel_x"    value="0.01" />

    <!-- Head Constants -->
    <xacro:property name="head_center" value="0 0 ${chassis_height / 2.0 + 1}" />

    <!-- Define a macro to compute the default inertial value for a link -->
    <xacro:macro name="default_inertial" params="mass">
        <inertial>
            <mass value="${mass}" />
            <inertia ixx="1.0" ixy="0.0" ixz="0.0" iyy="1.0" iyz="0.0" izz="1.0" />
        </inertial>
    </xacro:macro>

    <!-- load the physics constants for the Gazebo Simulator -->
    <xacro:include filename="$(find ning_urdf)/urdf/ningauble.gazebo" />


    <!-- _______________________________________________________________________________________________________________
         LINKS & JOINTS             
    -->

    <link name="chassis">
        <visual>
            <geometry>
                <mesh filename="package://ning_urdf/urdf/meshes/dae/ningauble_torso.dae"/>
                <origin xyz="${chassis_center}" />
            </geometry>
        </visual>
        <collision>
            <geometry>
                <cylinder radius="${chassis_diameter/2.0}" length="${chassis_height}"/>
                <origin xyz="${chassis_center}" />
            </geometry>
        </collision>

        <xacro:default_inertial mass="${chassis_mass}"/>

        <!-- TODO: GAZEBO PLUGIN FOR SENSORS GOES HERE -->
    </link>

    <link name="head">
        <visual>
            <geometry>
                <mesh filename="package://ning_urdf/urdf/meshes/dae/ningauble_head.dae"/>
                <origin xyz="${head_center}" />
            </geometry>
        <visual>
    </link>

    <!--
        Drive Wheel Links and Joints

        These are defined as an XACRO macro to make them duplicates
        mirror using the 'reflect' param: 1 is one side -1 the other
    -->
    <xacro:macro name="wheel" params="prefix reflect">

        <link name="${prefix}_wheel">
            <visual>
                <origin xyz="0 0 0" rpy="${pi/2} 0 0" />
                <geometry>
                    <mesh filename="package://ning_urdf/urdf/meshes/dae/ningauble_wheel.dae"/>
                </geometry>
            </visual>

            <collision>
                <origin xyz="0 0 0" rpy="${pi/2} 0 0" />
                <geometry>
                    <cylinder radius="${wheel_diameter/2}" length="${wheel_thickness}"/>
                </geometry>
            </collision>
    
            <xacro:default_inertial mass="${wheel_mass}"/>
        </link>

        <joint name="${prefix}_wheel_joint" type="continuous" >
            <axis xyz="0 1 0" rpy="0 0 0" />
            <parent link="chassis" />
            <child link="${prefix}_wheel"/>
            <origin xyz="${wheel_axel_x} ${0.005*reflect + wheel_base*reflect/2.0} -${wheel_diameter/2.0}" rpy="0 0 0"/>
        </joint>

    </xacro:macro>

    <!--
        Run the wheel macros to create the left and right wheels
    -->
    <xacro:wheel prefix="front_left"  reflect_x="-1"  reflect_y="1" />
    <xacro:wheel prefix="front_right" reflect_x="1"   reflect_y="1" />
    <xacro:wheel prefix="back_left"   reflect_x="-1"  reflect_y="-1" />
    <xacro:wheel prefix="front_right" reflect_x="1"   reflect_y="-1" />
    <xacro:wheel prefix="right" reflect="1"  />

</robot>